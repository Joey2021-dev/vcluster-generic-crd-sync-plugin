version: v2beta1
name: generic-crd-plugin

vars:
  PLUGIN_IMAGE: ghcr.io/loft-sh/vcluster-generic-crd-plugin
  DEVSPACE_FLAGS: "-n vcluster"

images:
  vcluster:
    image: ${PLUGIN_IMAGE}
    dockerfile: ./Dockerfile.dev
    rebuildStrategy: ignoreContextChanges

deployments:
  vcluster:
    helm:
      chart:
        name: vcluster
        repo: https://charts.loft.sh
      valuesFiles:
        - plugin.yaml
      values:
        sync:
          nodes:
            enabled: true
            syncAllNodes: true
            enableScheduler: true
        plugin:
          generic-crd-plugin:
            image: ${PLUGIN_IMAGE}
            rbac:
              role:
                extraRules:
                  # Config for testing
                  - apiGroups: ["cert-manager.io"]
                    resources: ["issuers", "certificates", "certificaterequests"]
                    verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
                  - apiGroups: ["monitoring.coreos.com"]
                    resources: ["servicemonitors"]
                    verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
            env:
              # Config for testing
              # run `make install-cert-manager` within the host kube context before using
              # Then in vcluster context create hack/selfsigned-issuer.yaml
              # and hack/generate-dummy-certificate.yaml
              #
              # For convenience export config inside the dev container from the hack/test-config.yaml
              # export CONFIG=$(cat hack/test-config.yaml)
              - name: CONFIG
                value: |-
                  version: v1beta1
                  mappings: []
        syncer:
          readinessProbe:
            enabled: false
          livenessProbe:
            enabled: false
        vcluster:
          extraArgs:
            - "--kube-apiserver-arg='v=6'"

dev:
  vcluster:
    imageSelector: ${PLUGIN_IMAGE}
    resources:
      limits:
        cpu: "0" # to prevent CPU throttling during compilation
        memory: "0" # to prevent OOM kills which can happen during compilation
    terminal:
      command: "./devspace_start.sh"
    ports:
    - port: 2346:2345
    sync:
    - path: ./:./