# Plugin Definition below. This is essentially a valid helm values file that will be merged
# with the other vcluster values during vcluster create or helm install.
plugin:
  generic-crd-plugin:
    image: ghcr.io/loft-sh/vcluster-generic-crd-plugin:latest
    imagePullPolicy: Always
    rbac:
      role:
        extraRules:
          - apiGroups: ["monitoring.coreos.com"]
            resources: ["servicemonitors"]
            verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
      clusterRole:
        extraRules:
          - apiGroups: ["apiextensions.k8s.io"]
            resources: ["customresourcedefinitions"]
            verbs: ["get", "list", "watch"]
    env:
      - name: CONFIG
        value: |-
          version: v1beta1
          mappings:
            - fromVirtualCluster:
                apiVersion: monitoring.coreos.com/v1
                kind: ServiceMonitor
                patches:
                  - op: add
                    path: .metadata.labels
                    #
                    # User TODO:
                    # Set the value below according to the .spec.serviceMonitorSelector of your Prometheus
                    value:
                      release: prometheus
                  - op: rewriteLabelKey
                    path: .spec.jobLabel
                  - op: rewriteLabelKey
                    path: .spec.targetLabels[*]
                  - op: rewriteLabelKey
                    path: .spec.podTargetLabels[*]
                  - op: rewriteLabelExpressionsSelector
                    path: .spec.selector
                    # TODO: Dev: add transformed namespace selectors to the label selectors (.spec.selector)
                    # FR - https://github.com/loft-sh/vcluster-generic-crd-sync-plugin/issues/15
                  - op: replace
                    path: .spec.namespaceSelector
                    value:
                      any: false
                      matchNames: []
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.ca.secret
                    sync:
                      secret: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.ca.configMap
                    sync:
                      configmap: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.cert.secret
                    sync:
                      secret: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.cert.configMap
                    sync:
                      configmap: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.bearerTokenSecret.name
                    sync:
                      secret: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.authorization.credentials.name
                    sync:
                      secret: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.basicAuth.username.name
                    sync:
                      secret: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.basicAuth.password.name
                    sync:
                      secret: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.oauth2.clientId.secret
                    sync:
                      secret: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.oauth2.clientId.configMap
                    sync:
                      configmap: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.oauth2.clientSecret.name
                    sync:
                      secret: true
                  - op: rewriteName
                    path: .spec.endpoints[*].tlsConfig.oauth2.tokenUrl
                    # regex below should translate service urls only
                    regex: >
                      ^http(s)?://$NAME((\.$NAMESPACE)?(\.svc(\.cluster\.local)?){1})?(/|$)
                  - op: rewriteName
                    path: .spec.endpoints[*].proxyUrl
                    # regex below should translate service urls only
                    regex: >
                      ^http(s)?://$NAME((\.$NAMESPACE)?(\.svc(\.cluster\.local)?){1})?(/|$)
